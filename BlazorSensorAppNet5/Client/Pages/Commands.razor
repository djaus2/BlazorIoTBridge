@page "/commands"

@inject HttpClient client

<h1>Commands</h1>

<button class="btn btn-primary" @onclick="StartReads">Send Command</button><br />
Command:&nbsp;<input type="text" @bind="@command"/><br />
Command:&nbsp;<input type="text" @bind="@value"/>
<button class="btn btn-primary" @onclick="Check">Check for Commmand</button><br />

@code {
    private int currentCount = 0;
    private string command { get; set; } = "";
    private string value { get; set; } = "";
    bool run = true;

    protected override async Task OnInitializedAsync()
    {
        var cmd = new BlazorSensorAppNet5.Shared.Command { Action = "STARTQ" };
        var response = await client.PostAsJsonAsync<BlazorSensorAppNet5.Shared.Command>("Commands2Device", cmd,null);
    }

    private async Task StartReads()
    {
        int val;
        BlazorSensorAppNet5.Shared.Command cmd;
        if (!int.TryParse(value, out val))
            cmd = new BlazorSensorAppNet5.Shared.Command { Action = command };
        else
            cmd = new BlazorSensorAppNet5.Shared.Command { Action = command, Parameter = val };
        var response = await client.PostAsJsonAsync<BlazorSensorAppNet5.Shared.Command>("Commands2Device", cmd,null);
        command = "";
        value = "";
        cmd = null;
        if (response.IsSuccessStatusCode)
        {
            System.Diagnostics.Debug.WriteLine("Sent OK");
        }
        else
        {
            System.Diagnostics.Debug.WriteLine("Not OK: {0} {1}", response.StatusCode, response.ReasonPhrase);
        }
       
    }

    private async Task Check()
    {
        string Command = "";
        string Param = "";
        //Program
        //command = Command;
        //value = Param;

        StateHasChanged();
        await StartReads();
    }

}
